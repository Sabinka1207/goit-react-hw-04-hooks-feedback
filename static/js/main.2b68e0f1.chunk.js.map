{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","type","className","css","button","onClick","Notification","message","Section","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedback","state","res","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,OAAS,kC,+ICqBZC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACzC,OACI,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCaDC,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,mCACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBACIC,KAAK,SACLC,UAAWC,IAAIC,OAEfC,QAAS,kBAAMP,EAAgBE,IAJnC,SAI6CA,GADpCA,SCEVM,MAVf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,4BAAIA,KCYGC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtB,OACI,oCACI,6BAAKD,IACJC,MCCE,SAASC,IACtB,MAAuBC,mBAAS,GAAhC,mBAAMrB,EAAN,KAAYsB,EAAZ,KACA,EAA6BD,mBAAS,GAAtC,mBAAMpB,EAAN,KAAesB,EAAf,KACA,EAAsBF,mBAAS,GAA/B,mBAAOnB,EAAP,KAAYsB,EAAZ,KAgBMC,EAAqB,WACzB,OAAOzB,EAAOC,EAAUC,GAWxB,OACE,sBAAKS,UAAU,MAAf,UACE,cAAC,EAAD,CAASO,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QA/BQ,CAAC,OAAQ,UAAW,OAgC5BC,gBA9Bc,SAACmB,GACN,SAAbA,GACFJ,GAAQ,SAAAK,GAAK,OAAIA,EAAM,KAER,YAAbD,GACFH,GAAW,SAAAI,GAAK,OAAIA,EAAM,KAEX,QAAbD,GACFF,GAAO,SAAAG,GAAK,OAAIA,EAAM,UAyBpB,cAAC,EAAD,CAAST,MAAM,aAAf,SACGO,IACC,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,mBAvB4B,WACtC,IAAIwB,EAAM,EAIV,OAHIH,MACFG,EAAMC,KAAKC,MAAO9B,EAAOyB,IAAwB,MAE5CG,EAkBuBG,KAGtB,cAAC,EAAD,CAAcf,QAAQ,2BCnDlCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2b68e0f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1P1j-\"};","import PropTypes from 'prop-types'\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n        return (\r\n            <>\r\n                <p>Good: {good}</p>\r\n                <p>Neutral: {neutral}</p>\r\n                <p>Bad: {bad}</p>\r\n                <p>Total: {total}</p>\r\n                <p>Positive feedback: {positivePercentage}%</p>\r\n            </>\r\n        )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics","import css from './FeedbackOptions.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <>\r\n            {options.map(option => (\r\n                <button\r\n                    type=\"button\"\r\n                    className={css.button}\r\n                    key={option}\r\n                    onClick={() => onLeaveFeedback(option)}>{option}</button>\r\n            ))}     \r\n        </>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions","import PropTypes from 'prop-types'\r\n\r\nfunction Notification({ message }) {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification","import PropTypes from 'prop-types'\r\n\r\nfunction Section({ title, children }) {\r\n    return (\r\n        <section>\r\n            <h1>{title}</h1>\r\n            {children}\r\n        </section>\r\n    )    \r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.object\r\n}\r\n\r\nexport default Section","import \"./App.css\";\nimport { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\nimport Section from \"./components/Section/Section\";\n\nexport default function App() {\n  const[good, setGood] = useState(0);\n  const[neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const feedbacks = ['good', 'neutral', 'bad']\n\n  const onLeaveFeedback = (feedback) => {\n    if (feedback === 'good') {\n      setGood(state => state+1)\n    }\n    if (feedback === 'neutral') {\n      setNeutral(state => state+1)\n    }\n    if (feedback === 'bad') {\n      setBad(state => state+1)\n    }\n    \n  };\n\n  const countTotalFeedback = () =>{\n    return good + neutral + bad;\n  }\n\n  const countPositiveFeedbackPercentage = () => {\n    let res = 0;\n    if (countTotalFeedback()) {\n      res = Math.round((good / countTotalFeedback()) * 100);\n    }\n    return res;\n  }\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={feedbacks}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}